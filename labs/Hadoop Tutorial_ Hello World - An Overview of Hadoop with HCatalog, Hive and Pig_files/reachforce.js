




/*
     FILE ARCHIVED ON 2:27:14 May 22, 2015 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 13:37:34 Jul 29, 2015.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
var sfcc$ = {};sf$.doSetup = false;sfjq$(document).ready(function() {	// Required values: Customer specific values	sf$.token = "103321";	sf$.showSmartFormAlerts = false; // set to false after a successful configuration	sf$.showCriticalAlerts = false; // set to false after a successful configuration	sf$.assignIDsByName = true;	// Required mapping: Input field ID mapping for required end user company input data	sf$.companyNameFieldAlias = "Company";	// Input field ID mappings for additional end user company input data	sf$.phoneFieldAlias = "Phone";	// Input field ID mappings for additional data that can be used in the remediation process	sf$.firstNameFieldAlias = "FirstName";	sf$.lastNameFieldAlias = "LastName";	sf$.emailFieldAlias = "Email";	// Optional mappings: Hidden field ID mappings for MATCHED company append data	sf$.mCompanyNameFieldAlias = "RF_SITE_Company";	sf$.mAddr1FieldAlias = "RF_SITE_Addr1";	sf$.mAddr2FieldAlias = "RF_SITE_Addr2";	sf$.mCityFieldAlias = "RF_SITE_City";	sf$.mStateFieldAlias = "RF_SITE_State";	sf$.mZipFieldAlias = "RF_SITE_Zip";	sf$.mCountryFieldAlias = "RF_SITE_Country";	sf$.mPhoneFieldAlias = "RF_SITE_Phone";	sf$.mTradeNameFieldAlias = "RF_SITE_TradeName";	sf$.mEmplyeeCountFieldAlias = "RF_SITE_EmplyeesTotal";	sf$.mEmplyeeHereFieldAlias = "RF_SITE_EmplyeesHere";	sf$.mAnnualRevFieldAlias = "RF_SITE_AnnualRev";	sf$.mSicFieldAlias = "RF_SITE_SICCode";	sf$.mSicNameFieldAlias = "RF_SITE_SicName";	sf$.mAltSicFieldAlias = "RF_SITE_Industry";	sf$.mNaicsFieldAlias = "RF_SITE_NAICCode";	sf$.mNaicsNameFieldAlias = "RF_SITE_NAICSName";	sf$.mUrlFieldAlias = "RF_SITE_URL";	sf$.mLocationTypeFieldAlias = "RF_SITE_LocationType";	sf$.mSubsidiaryFieldAlias = "RF_SITE_SubCode";	// Optional mappings: Hidden field ID mappings for HEADQUARTER company append data	sf$.hqCompanyNameFieldAlias = "RF_HQ_Company";	sf$.hqAddr1FieldAlias = "RF_HQ_Addr1";	sf$.hqAddr2FieldAlias = "RF_HQ_Addr2";	sf$.hqCityFieldAlias = "RF_HQ_City";	sf$.hqStateFieldAlias = "RF_HQ_State";	sf$.hqZipFieldAlias = "RF_HQ_Zip";	sf$.hqCountryFieldAlias = "RF_HQ_Country";	sf$.hqPhoneFieldAlias = "RF_HQ_Phone";	sf$.hqTradeNameFieldAlias = "RF_HQ_TradeName";	sf$.hqEmplyeeCountFieldAlias = "RF_HQ_EmplyeesTotal";	sf$.hqEmplyeeHereFieldAlias = "RF_HQ_EmplyeesHere";	sf$.hqAnnualRevFieldAlias = "RF_HQ_AnnualRev";	sf$.hqSicFieldAlias = "RF_HQ_SICCode";	sf$.hqSicNameFieldAlias = "RF_HQ_SicName";	sf$.hqAltSicFieldAlias = "RF_HQ_Industry";	sf$.hqNaicsFieldAlias = "RF_HQ_NAICCode";	sf$.hqNaicsNameFieldAlias = "RF_HQ_NAICSName";	sf$.hqUrlFieldAlias = "RF_HQ_URL";	sf$.hqLocationTypeFieldAlias = "RF_HQ_LocationType";	sf$.hqSubsidiaryFieldAlias = "RF_HQ_SubCode";	// Optional mappings: Hidden field ID mappings for DOMESTIC HEADQUARTER company append data	sf$.dhqCompanyNameFieldAlias = "RF_DHQ_Company";	sf$.dhqAddr1FieldAlias = "RF_DHQ_Addr1";	sf$.dhqAddr2FieldAlias = "RF_DHQ_Addr2";	sf$.dhqCityFieldAlias = "RF_DHQ_City";	sf$.dhqStateFieldAlias = "RF_DHQ_State";	sf$.dhqZipFieldAlias = "RF_DHQ_Zip";	sf$.dhqCountryFieldAlias = "RF_DHQ_Country";	sf$.dhqPhoneFieldAlias = "RF_DHQ_Phone";	sf$.dhqTradeNameFieldAlias = "RF_DHQ_TradeName";	sf$.dhqEmplyeeCountFieldAlias = "RF_DHQ_EmplyeesTotal";	sf$.dhqEmplyeeHereFieldAlias = "RF_DHQ_EmplyeesHere";	sf$.dhqAnnualRevFieldAlias = "RF_DHQ_AnnualRev";	sf$.dhqSicFieldAlias = "RF_DHQ_SICCode";	sf$.dhqSicNameFieldAlias = "RF_DHQ_SicName";	sf$.dhqAltSicFieldAlias = "RF_DHQ_Industry";	sf$.dhqNaicsFieldAlias = "RF_DHQ_NAICCode";	sf$.dhqNaicsNameFieldAlias = "RF_DHQ_NAICSName";	sf$.dhqUrlFieldAlias = "RF_DHQ_URL";	sf$.dhqLocationTypeFieldAlias = "RF_DHQ_LocationType";	sf$.dhqSubsidiaryFieldAlias = "RF_DHQ_SubCode";	// Optional mappings: Hidden field ID mappings for inferred geo-IP append data	sf$.inferredCityFieldAlias = "RF_geoIP_city";	sf$.inferredStateFieldAlias = "RF_geoIP_state";	sf$.inferredCountryFieldAlias = "RF_geoIP_country";	sf$.inferredAreaCodeFieldAlias = "RF_geoIP_areacode";	// Required mappings:	sf$.confidenceLevelFieldAlias = "RF_ConfidenceLevel"; // Field ID to hold the confidence level of a company remediation	// Custom Industry Translations	sf$.translateAltSic = function(val) {		try {			if ( undefined !== val && val !== null && val.length > 0 ) {				var subval = val.substr(0, 4);				var translation = sfcc$.sicCodeMap[subval];				if ( translation === null ) {					subval = val.substr(0, 3);					translation = sfcc$.sicCodeMap[subval];					if ( translation === null ) {						subval = val.substr(0, 2);						translation = sfcc$.sicCodeMap[subval];						if ( translation === null ) {							subval = val.substr(0, 1);							translation = sfcc$.sicCodeMap[subval];						}					}				}				val = ( translation === null ) ? val : translation;			}		} catch (e) {}		return val;	};	sfcc$.sicCodeMap = {		"0": "Agriculture & Mining",		"10": "Agriculture & Mining",		"12": "Agriculture & Mining",		"13": "Agriculture & Mining",		"14": "Agriculture & Mining",		"15": "Real Estate & Construction",		"16": "Real Estate & Construction",		"17": "Real Estate & Construction",		"2": "Manufacturing",		"3": "Manufacturing",		"40": "Transporation & Storage",		"41": "Transporation & Storage",		"42": "Transporation & Storage",		"43": "Transporation & Storage",		"44": "Transporation & Storage",		"45": "Transporation & Storage",		"46": "Energy & Utilities",		"472": "Travel, Recreation, and Leisure",		"473": "Transporation & Storage",		"474": "Transporation & Storage",		"478": "Transporation & Storage",		"48": "Telecommunications",		"49": "Energy & Utilities",		"50": "Wholesale & Distribution",		"51": "Wholesale & Distribution",		"52": "Retail",		"53": "Retail",		"54": "Retail",		"55": "Retail",		"56": "Retail",		"57": "Retail",		"58": "Retail",		"59": "Retail",		"60": "Financial Services",		"61": "Financial Services",		"62": "Financial Services",		"63": "Financial Services",		"64": "Financial Services",		"65": "Real Estate & Construction",		"67": "Financial Services",		"70": "Hospitality",		"72": "Services",		"731": "Advertising",		"732": "Business Services",		"7331": "Advertising",		"7334": "Business Services",		"7335": "Business Services",		"7336": "Business Services",		"7338": "Business Services",		"734": "Business Services",		"735": "Business Services",		"736": "Business Services",		"737": "Software & Internet",		"738": "Business Services",		"75": "Services",		"76": "Services",		"78": "Media & Entertainment",		"79": "Travel, Recreation, and Leisure",		"80": "Healthcare, Pharmaceuticals, & Biotech",		"81": "Business Services",		"82": "Education",		"83": "Non-Profit",		"84": "Non-Profit",		"86": "Business Services",		"87": "Business Services",		"88": "Other",		"89": "Other",		"91": "Government",		"92": "Government",		"93": "Government",		"94": "Government",		"95": "Government",		"96": "Government",		"97": "Government",		"99": "Nonclassifiable Establishments",	};	// Check if Marketo FORM Exists	sfcc$.checkFormExist = setInterval(function() {		if (typeof sf$.grabInputID(sf$.companyNameFieldAlias) != 'undefined' && sfjq$("#" + sf$.grabInputID(sf$.companyNameFieldAlias)).length && (typeof Mkto === "object" || typeof MktoForms2 === "object")) {			sfcc$.formID = sfjq$("input[name=formid]").val();			if (typeof Mkto === "object" && typeof Mkto.formSubmit === "function") {				// Mkto Forms 1.0 submit injection				//sf$.smartFormID="mktForm_" + sfcc$.formID;				sf$.smartFormID = "contact-us-form";				sf$.overrideSubmit = true;			} else {				// Mkto Forms 2.0 submit injection				sf$.smartFormID = "mktoForm_" + sfcc$.formID;				sf$.overrideSubmit = false;			}			sf$.assignIDsByName = true;			sf$.doSetup = true;			var valid;			var form = sfjq$( '#custom_mktoForm_' + sfcc$.formID );			var unique_identifier = sfjq$( '.unique_identifier', form ).val();			if ( typeof mktoEE !== 'undefined' ) {				mktoEE[ unique_identifier ] = false;			}			sf$.runSFSetup();			if ( ! sf$.overrideSubmit ) {				sfcc$.doAppend = true;				sfjq$(form).on( 'submit', function() {					valid = sfjq$( form ).validationEngine('validate');					if ( valid && typeof sf$.forceSelection === "function" && sfcc$.doAppend && sf$.formCheck() ) {						sfcc$.doAppend = false;						sf$.forceSelection();						return false;					}					// return true to allow submit when SF submit injection completes - submit request initiated with sf$.doSmartFormSubmit()					return true;				});				// override sf$.doSmartFormSubmit() so that we force an original form submit, not a scripted form.submit()				sf$.doSmartFormSubmit = function() {					if ( valid ) {						if ( typeof mktoEE !== 'undefined' ) {							mktoEE[ unique_identifier ] = true;						}						sfjq$(form).submit();					}				};			}			clearInterval(sfcc$.checkFormExist);		}	}, 100);});